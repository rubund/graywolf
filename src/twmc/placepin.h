void placepin( int cell, BOOL newVertFlag );
void set_pin_verbosity( BOOL flag );
void update_pins( BOOL initialFlag );
void set_up_pinplace();
void find_optimal_locations( P1(BOOL newVertFlag ));
void determine_bbox( P2( INT net, INT cell )) ;
void place_pin( P4( PINBOXPTR pin, INT pos, INT tiebreak, INT side ) ) ;
void set_hardpin_pos( P2( PINBOXPTR pin, BOOL newVertFlag ) );
void sort_softpins() ;
int compare_pins( P2( PINBOXPTR *pinptr1, PINBOXPTR *pinptr2 ) ) ;
int sort_by_pos( P2( PINBOXPTR *pinptr1, PINBOXPTR *pinptr2 ) ) ;
void install_pin_groups( P1( PINBOXPTR pin ) ) ;
void permute_pg( P1( PINBOXPTR pin ) ) ;
void space_pins() ;
void place_soft_equivs() ;
void find_next_free_spotm( P3( SIDEBOXPTR sideptr, PINBOXPTR pin, INT *pos )) ;
BOOL find_next_free_spotg(P3( SIDEBOXPTR sideptr, PINBOXPTR pin, INT *pos )) ;
void init_side_array( P1( BOOL newVertFlag ) ) ;
void side_to_global() ;
void find_hardpin_side()  ;
void print_pins( char *message, PINBOXPTR *array, int howmany );
void set_pin_verbosity( BOOL flag );
void update_pins( BOOL initialFlag );
int find_tile_side( int center, int loc, int direction );
void init_wire_est();
